name: cli-tool
on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name'
        required: true
      user_name:
        description: 'Username for deployment'
        required: true

jobs:
  first-job:
    runs-on: ubuntu-latest
    steps:
      - name: runner job
        uses: actions/checkout@v4

      - name: creating deployment
        run: |
          cat <<EOF > deployment.yml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ${{ inputs.user_name }}-deployment
            labels:
              app: ${{ inputs.user_name }}-app
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: ${{ inputs.user_name }}-app
            template:
              metadata:
                labels:
                  app: ${{ inputs.user_name }}-app
              spec:
                containers:
                - name: ${{ inputs.user_name }}-container
                  image: ${{ inputs.image_name }}
                  ports:
                  - containerPort: 80
          EOF

      - name: creating service
        run: |
          cat <<EOF > service.yml
          apiVersion: v1
          kind: Service
          metadata:
            name: my-service
          spec:
            type: NodePort
            selector:
              app: ${{ inputs.user_name }}-app
            ports:
              - port: 80
                targetPort: 80
          EOF

      - name: copying script to instance
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username:  ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: .
          target: /home/ubuntu/

  setup-job:
    runs-on: ubuntu-latest
    needs: first-job
    steps:
      - name: Exec cmd on remote server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ~
            chmod +x docker-setup.sh
            ./docker-setup.sh

  login-job:
    runs-on: ubuntu-latest
    needs: setup-job
    steps:
      - name: Exec cmd on remote server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ~
            kind create cluster
            kubectl apply -f deployment.yml
            kubectl apply -f service.yml
